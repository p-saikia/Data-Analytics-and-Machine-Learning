library(kernlab)
library(caret)
library(e1071)
library(calibrate)
library(datasets.load)
library(RSNNS)
rm (list=ls())
cat("\014") 
location_set <- read.csv("data_set_1.csv")
str(location_set)
summary(location_set)
location_set.scale <- data.frame(scale(location_set[, 2:13], center = TRUE, scale = TRUE))
normalize <- function(x) {
  return ((x - min(x)) / (max(x) - min(x)))
}
location_set.scale <- as.data.frame(lapply(location_set[, 2:13] , normalize))
train_sample <- createDataPartition(y=location_set.scale$wind_direction, p=0.75, list = FALSE)
location_set_train <- location_set.scale[train_sample,]
location_set_test <- location_set.scale[-train_sample,]
location_set_model_rbfdot_wind_speed <- ksvm( wind_speed ~ pressure + radiation_direct + humidity + radiation_global + air_temperature_mean ,data = location_set_train, kernel = "rbfdot")
location_set_model_rbfdot_wind_direction <- ksvm( wind_direction ~ pressure + radiation_direct + humidity + radiation_global + air_temperature_mean , data = location_set_train, kernel = "rbfdot")
location_set_pred_rbfdot_wind_speed <- predict(location_set_model_rbfdot_wind_speed, location_set_test)
location_set_pred_rbfdot_wind_direction <- predict(location_set_model_rbfdot_wind_direction, location_set_test)
location_set_model_rbfdot_wind_speed@error
location_set_model_rbfdot_wind_direction@error
RMSE(location_set_pred_rbfdot_wind_speed,location_set_test$wind_speed)
RMSE(location_set_pred_rbfdot_wind_direction,location_set_test$wind_direction)
eval_results <- function(true, predicted) {
  SSE <- sum((predicted - true)^2)
  SST <- sum((true - mean(true))^2)
  R_square <- 1 - SSE / SST
  
  
  
  data.frame(
    
    Rsquare = R_square
  )
  
}
eval_results(location_set_test$wind_speed, location_set_pred_rbfdot_wind_speed)
eval_results(location_set_test$wind_direction, location_set_pred_rbfdot_wind_direction)
